+++++ Binary Tree +++++

INORDER: 4, 10, 12, 15, 18, 22, 24, 25, 31, 35, 44, 50, 70, 

  * DELETE: 25 | @ Success!
4, 10, 12, 15, 18, 22, 24, 31, 35, 44, 50, 70,  -> 12


  * DELETE: 22 | @ Success!
4, 10, 12, 15, 18, 24, 31, 35, 44, 50, 70,  -> 11


  * INSERT: 66 | @ Success!
4, 10, 12, 15, 18, 24, 31, 35, 44, 50, 66, 70,  -> 12


  * SEARCHNODE: 12 | @ Found! -> FATHER (10)

  * MINIMUM-MAXIMUM: (4) (70)

  * SUCCESSOR: 31 | 35

  * SEARCHNODE: 22 | # Not Found!

  * PREDECESSOR: 31 | 24

  * SUCCESSOR: 31 | 35

  * MINIMUM-MAXIMUM: (4) (70)

  * INSERT: 90 | @ Success!
4, 10, 12, 15, 18, 24, 31, 35, 44, 50, 66, 70, 90,  -> 13


  * MINIMUM-MAXIMUM: (4) (90)

  * SUCCESSOR: 90 | 50

  * DELETE: 70 | @ Success!
4, 10, 12, 15, 18, 24, 31, 35, 44, 50, 66, 90,  -> 12


  * SEARCHNODE: 4 | @ Found! -> FATHER (10)

  * DELETE: 4 | @ Success!
10, 12, 15, 18, 24, 31, 35, 44, 50, 66, 90,  -> 11


  * DELETE: 10 | @ Success!
12, 15, 18, 24, 31, 35, 44, 50, 66, 90,  -> 10


  * SEARCHNODE: 12 | @ Found! -> FATHER (15)

  * INSERT: 13 | @ Success!
12, 13, 15, 18, 24, 31, 35, 44, 50, 66, 90,  -> 11


  * SEARCHNODE: 12 | @ Found! -> FATHER (15) RIGHT (13)

-- Final --

INORDER: 12, 13, 15, 18, 24, 31, 35, 44, 50, 66, 90, 

PREORDER: 31, 15, 12, 13, 24, 18, 50, 35, 44, 90, 66, 

POSTORDER: 13, 12, 18, 24, 15, 44, 35, 66, 90, 50, 31, 
